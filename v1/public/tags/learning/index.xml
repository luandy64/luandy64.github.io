<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learning on Andy Lu</title>
    <link>http://localhost:1313/tags/learning/</link>
    <description>Recent content in Learning on Andy Lu</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Oct 2018 23:09:03 -0400</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/learning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Clojure Loops</title>
      <link>http://localhost:1313/blog/clojure-loops/</link>
      <pubDate>Tue, 02 Oct 2018 23:09:03 -0400</pubDate>
      <guid>http://localhost:1313/blog/clojure-loops/</guid>
      <description>&lt;p&gt;While working on a practice problem today, I realized I have to loop over a set&#xA;of things. Acutally, to get super specific I wanted to use two loops, one nested&#xA;in the other to do some comparisons between elements in the set.&lt;/p&gt;&#xA;&lt;p&gt;I don&amp;rsquo;t understand using a loop over a function call though.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Clojure Day 1</title>
      <link>http://localhost:1313/blog/clojure-day-1/</link>
      <pubDate>Mon, 17 Sep 2018 21:13:57 -0400</pubDate>
      <guid>http://localhost:1313/blog/clojure-day-1/</guid>
      <description>&lt;p&gt;Today I started reading through this book to learn some Clojure. It&amp;rsquo;s called&#xA;&lt;a href=&#34;https://www.braveclojure.com/&#34;&gt;Clojure for the Brave and True&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I thought I would make myself a little cheatsheet that grows as I progress&#xA;through the book.&lt;/p&gt;&#xA;&lt;h2 id=&#34;forms&#34;&gt;Forms&lt;/h2&gt;&#xA;&lt;p&gt;These are like the building blocks of the files.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;This string&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Vectors&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;of&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;strings&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;are&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;thing&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;operators&#34;&gt;Operators&lt;/h2&gt;&#xA;&lt;p&gt;All operations use the same structure. Given an operator &lt;code&gt;operator&lt;/code&gt; and operands&#xA;&lt;code&gt;op1, op2, ... opN&lt;/code&gt;, you use the following structure:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
